---
- name: Include variables from meta/main.yml
  ansible.builtin.include_vars:
    file: "{{ generator_role_path }}/meta/main.yml"
    name: meta

- name: Retrieve galaxy_id
  register: _generator_galaxy_id
  changed_when: false
  failed_when: false
  ansible.builtin.shell:
    cmd: "{{ generator_galaxy_id_cmd }}"

- name: Generate molecule files | Create Necessary Dirs
  when: generator_generate_molecule_files | bool
  loop: "{{ generator_molecule_scenarios + [ {'name': 'default'}, {'name': 'playbooks'} ] }}"
  ansible.builtin.file:
    path: "{{ generator_role_path }}/molecule/{{ item.name }}"
    state: directory

- name: Create other necessary directories
  when:
    - generator_dirs is defined
    - generator_dirs is iterable
  loop: "{{ generator_dirs }}"
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory

- name: Generate generator_molecule_workflow_cron file
  when: (generator_molecule_workflow_cron_random) or
        (generator_molecule_workflow_cron_random is defined and
        generator_molecule_workflow_cron_random | bool)
  ansible.builtin.template:
    src: generator_molecule_workflow_cron.j2
    dest: "{{ generator_role_path }}/.generator/generator_molecule_workflow_cron"
    # Do not overwrite if it already exists
    force: false

- name: Slurp files for README
  block:
    - name: Slurp defaults/main.yml
      register: generator_defaults
      ansible.builtin.slurp:
        src: "{{ generator_role_path }}/defaults/main.yml"

    - name: "Slurp {{ generator_molecule_playbook_dir }}/converge.yml"
      register: generator_converge
      ansible.builtin.slurp:
        src: "{{ generator_role_path }}/{{ generator_molecule_playbook_dir }}/converge.yml"

    - name: Check if .generator/playbook.yml is present
      register: generator_example_playbook_stat
      ansible.builtin.stat:
        path: "{{ generator_example_playbook_path }}"

    - name: Slurp .generator/playbook.yml if present
      register: generator_example_playbook
      when: generator_example_playbook_stat.stat.exists | bool
      ansible.builtin.slurp:
        src: "{{ generator_example_playbook_path }}"

    - name: Override generator_example_playbook if needed
      when: not generator_example_playbook_stat.stat.exists | bool
      ansible.builtin.set_fact:
        generator_example_playbook: "{{ generator_converge }}"

    - name: Slurp .generator/links.md if present
      failed_when: false
      register: generator_links_md
      ansible.builtin.slurp:
        src: "{{ generator_role_path }}/.generator/links.md"

    - name: Check for install_methods template
      register: generator_install_methods
      ansible.builtin.stat:
        path: "{{ generator_role_path }}/.generator/install_methods.md"

- name: Generate README
  block:
    - name: Copy README template if needed
      when: generator_copy_readme_template | bool
      ansible.builtin.copy:
        src: templates/README.md.j2
        dest: "{{ generator_role_path }}/.generator/README.md.j2"

    - name: Template README
      ansible.builtin.template:
        src: "{{ generator_role_path }}/.generator/README.md.j2"
        dest: "{{ generator_role_path }}/README.md"

- name: Copy default files
  when:
    - generator_files is defined
    - generator_files is iterable
  block:
    - name: Copy default files | Copy file if needed
      loop: "{{ generator_files }}"
      loop_control:
        label: "{{ item['dest'] }}"
      when:
        - (item['state'] is undefined) or (item['state'] in [ "present", "force" ])
      ansible.builtin.template:
        src: "{{ item['src'] | default('defaults/' ~ item['dest'] ~ '.j2') }}"
        dest: "{{ generator_role_path }}/{{ item['dest'] }}"

    - name: Copy default files | Delete files if needed
      loop: "{{ generator_files }}"
      when: item['state'] is defined and item['state'] == "absent"
      ansible.builtin.file:
        path: "{{ generator_role_path }}/{{ item['dest'] }}"
        state: absent

- name: Check if requirements.yml is present
  register: requirements_stat
  ansible.builtin.stat:
    path: "{{ generator_role_path }}/requirements.yml"

- name: Generate molecule files
  when: generator_generate_molecule_files | bool
  block:
    - name: Generate molecule files | Check if default molecule.yml is present
      register: default_molecule_yml_stat
      ansible.builtin.stat:
        path: "{{ generator_role_path }}/molecule/default/molecule.yml"

    - name: Generate molecule files | Check if verify.yml is present
      register: verify_stat
      ansible.builtin.stat:
        path: "{{ generator_role_path }}/molecule/default/verify.yml"

    - name: Generate molecule files | Create molecule.yml files
      ansible.builtin.template:
        src: "molecule/{{ molecule_file.format }}/molecule.yml.j2"
        dest: "{{ generator_role_path }}/molecule/{{ molecule_file.name }}/molecule.yml"
      loop_control:
        loop_var: molecule_file
      loop: "{{ generator_molecule_scenarios }}"

    - name: Generate molecule files | Link default molecule.yml if not present
      ansible.builtin.file:
        state: link
        src: "../{{ generator_molecule_default_scenario }}/molecule.yml"
        dest: "{{ generator_role_path }}/molecule/default/molecule.yml"
