---
{{ ansible_managed | comment }}
name: Lint code and run Molecule tests

'on':
  push:
    paths-ignore:
      - README.md
      - .github/settings.yml
  pull_request:
    paths-ignore:
      - README.md
      - .github/settings.yml
  workflow_dispatch:
{% if generator_molecule_workflow_cron | length > 0 %}
  schedule:
    - cron: "{{ generator_molecule_workflow_cron }}"
{% endif %}

defaults:
  run:
    working-directory: {{ generator_namespace }}.{{ generator_role_name }}

jobs:
  lint:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Git Repo
        uses: actions/checkout@v2
        with:
          path: {{ generator_namespace }}.{{ generator_role_name }}

      - name: "Set up Python 3.9"
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
{% include "cache_include.yml.j2" %}

      - name: Install pip packages
        run: |
          pip3 install -U pip
          pip3 install wheel
          pip3 install molecule molecule-podman ansible-core yamllint ansible-lint

      - name: Run molecule lint
        run: molecule lint -s single
        env:
          PY_COLORS: "1"
          ANSIBLE_FORCE_COLOR: "1"
          GALAXY_FORCE: true

  test:
    runs-on: ubuntu-20.04
    needs:
      - lint
    strategy:
      fail-fast: false
      matrix:
{% if generator_molecule_wflow_test.matrix is defined %}
{{ generator_molecule_wflow_test.matrix | to_nice_yaml | indent(width=8, first=true) }}
{%- endif %}
{% if generator_molecule_wflow_test.matrix.os is not defined %}
        os:
{%   for platform in meta.galaxy_info.platforms %}
{%   set name = platform.name %}
{%     for version in platform.versions %}
{%       if version == "all" %}
{%         for tag in generator_distribution_version_mapping[name][version] %}
{%           if platform.name == "EL" and generator_EL_override is defined and generator_EL_override is iterable %}
{%   set name = generator_EL_override[tag] %}
{%           endif %}
{%   set version = tag %}
{%   include 'workflow_platforms_item.yml.j2' %}
{%         endfor %}
{%       else %}
{%         if platform.name == "EL" and generator_EL_override is defined and generator_EL_override is iterable %}
{%   set name = generator_EL_override[version] %}
{%         endif %}
{%   include 'workflow_platforms_item.yml.j2' %}
{%       endif %}
{%     endfor %}
{%   endfor %}
{%   endif %}
    env:
      PY_COLORS: "1"
      ANSIBLE_FORCE_COLOR: "1"
      GALAXY_FORCE: true
{%- raw %}
      image: "${{ matrix.os.image }}"
      tag: "${{ matrix.os.tag }}"
{% endraw %}
{%- if generator_molecule_wflow_test.env is defined %}
{%    for env in generator_molecule_wflow_test.env | dict2items %}
      {{ env.key }}: "{{ env.value }}"{{ "\n" if not loop.last }}
{%-   endfor %}
{%- endif %}

    steps:
      - name: Checkout Git Repo
        uses: actions/checkout@v2
        with:
          path: {{ generator_namespace }}.{{ generator_role_name }}

      - name: "Set up Python 3.9"
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
{% include "cache_include.yml.j2" %}

      - name: Install pip packages
        run: |
          pip3 install -U pip
          pip3 install wheel
          pip3 install molecule molecule-podman ansible-core yamllint ansible-lint

      - name: Install containers.podman and community.general collections (Molecule dependency)
        run: |
          ansible-galaxy collection install containers.podman
          ansible-galaxy collection install community.general

      # This is necessary to allow running systemd in rootless containers.
      - name: Start systemd user service
        run: |
          loginctl enable-linger runner
          sleep 1
{% if generator_molecule_wflow_test.steps is defined %}
{{ generator_molecule_wflow_test.steps | to_nice_yaml(indent=2) | indent(width=6, first=true) }}
{%- endif %}
{% if generator_molecule_wflow_test.skip_test_step is defined and generator_molecule_wflow_test.skip_test_step | bool %}
{% else %}
      - name: Run molecule test
        run: molecule test -s single
{% endif %}
{#
# vim: set filetype=yaml.jinja2:
#}
